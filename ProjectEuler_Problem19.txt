
Problem :
You are given the following information, but you may prefer to do some research for yourself.

1 Jan 1900 was a Monday.
Thirty days has September,
April, June and November.
All the rest have thirty-one,
Saving February alone,
Which has twenty-eight, rain or shine.
And on leap years, twenty-nine.
A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.
How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?

Solution:

#include<iostream>
#include<conio.h>
#include<string>
#include<iomanip>
#include<sstream>
#include<math.h>
#include<set>
#include<list>
#include<map>
using namespace std;

class calendar
{
  int date ;
  int month ;
  int year ;
  int day;
  

  public:

	int count ;

  calendar(int date ,int month ,int year ,int day,int cnt)
  {
	  count = cnt ;

	  cout<<"\n cons start";
	  while (year < 2001) 
	  {
		 
		  if(date == 1 &&  day ==1)
		  {
			  				     			  		                		 	count++;

		  }

		  date ++ ;
		  day++;

		  if(day>7)
		  {
			  day = 1 ;
		  }

          if(((month==1 || month ==3 || month ==5 || month ==7   
          ||month == 8 || month == 10 ||month ==12)&&  
          (date >31))||((month==4 || month ==6 || month ==9 ||   
          month == 11 )&& (date >30))||((month==2 )&& (((year %  
          4 == 0 && year %100 != 0) || (year % 400 ==                                 
          0)) ?(date>29) :(date>28))))            
	    {
			
              date = 1 ;
		   month++;

		   if(month > 12)
		   {
				 
                  month = 1;
		       year++;
			  
              }

	    }


	  }


  }

};



int main()
{
   calendar coj(1 ,1 ,1901 ,3,0);

   cout<<"\n sum ="<<coj.count ;

   getch();

   return 0; 
}

Answer:171